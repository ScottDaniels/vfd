.** 
.** Mnemonic:	markdown.im
.** Abstract:	Setup template which allows for single column format that can be 
.** 			rendered in postscript, text, and as markdown.
.**				Macros for the folowing must be used  inplace of the native {X}fm
.**				commands in order to generate markdown; both wordy forms and {X}fm
.**				mimicing variables (e.g. def_list, and &bl) are supported:
.**
.**					&def_list(space font) instead of .bd
.**					&di(text) insted of .di
.**					&hn(text) instad of .h1-4
.**
.**					&start_note instead of .cn start
.**					&start_vnote( space )  same as start_note, but allows space to be defined
.**					&end_note
.**
.**					.bl can be used, but with &li1 and &li2 symbols (.e.g .bl &li1)
.**
.**				Enumerated lists (1, 2, 3) can be generated normally as markdown
.**				should key off of the number, however generating an alpha enumerated
.**				list probably won't work from a markdown point of view. 
.**
.**				It is also important to note that because of the way markdown works
.**				adding spaces before and after text in the macro invocations may 
.**				not produce the desired output.
.**
.**				Macros provided by this file (not mentioned above):
.**					textsize, textfont, extextsize, ditext, cwfont
.**					table(...) table_end table_row() table_col()
.**					bold(), ital(), cw()
.**					note(), super()
.**					start_note, end_note  -- Column notes with automatic superscript
.**					line and &ln
.**
.**				We use the super image macro which sets up the image and cimage macros
.**				along with the needed capture file containing the 'super macro' that 
.**				actually does the work. Parms for both image and cimage are:
.**
.**					&image( eps-parms : space : figure-text : url )
.**
.**				Space is assumed to be the number of inches required. Eps parms are any
.**				epse parms needed (close, proportional, x=, etc.); l= is added using the
.**				space parameter which is also used to reserve space (.4i more than space
.**				to account for figure text).
.**					
.**				Postscript output is gnerated normally (just run pfm).  Markdown is generatd 
.**				using the tfm formatter defining MARKDOWN in the evironment:
.**					MARKDOWN=1 tfm file.xfm file.md
.**
.** Author:		E. Scott Danils
.** Date:		26 October 2016
.** -------------------------------------------------------------------------------

.if ! _setup
	.dv _setup 1

	.gv e MARKDOWN markdown

	.if pfm
		.** using 6.5 with indent of 1i at the column level centers pg numbers on pg nicely
		.** use indent to center the text column.
		.cd 1 6.5i i=1.i m=0i
	.ei
		.cd 1 6.8i i=0i m=0i
	.fi

	.** best defaults for pfm; overridden for other formatters below
	.ll 6i
	.in .25i
	.sf Helvetica
	.st 10

	.dh 1  m=.25i e=no s=3,.5 i=0 p=14 f=Helvetica-bold r=.75i
	.dh 2  m=.25i s=1.5,.5 i=0    p=12 f=Helvetica-bold r=.25i
	.dh 3  m=.25i s=1,0 i=0       p=10 f=Helvetica-bold	r=.25i

	.ju on
	.hn off

	.dv fontsize 30p
	.dv textfont Helvetica
	.dv textsize 10p
	.dv extextsize 8p
	.dv ditext Helvetica-bold
	.dv cwfont Courier

	.** supersccript number for start_note macro
	.dv ss_num 1

	.**  these macros are common for prfm/tfm, markdown will override some
	.dv indent .ll -.5i .in +.25i
	.dv uindent .in -.25i .ll +.5i
	.dv smindent .ll -1i .in +.25i
	.dv smuindent .in -.25i .ll +1i

	.dv bd .sp .5 ^&indent .bd $1 
	.dv def_list .sp .5 ^&indent .bd $1 
	.dv di .sp .5 .di $1 ^: 
	.dv ed .ed ^&uindent .sp 1
	.dv end_dlist .ed ^&uindent .sp 1

	.dv beg_list .sp .5 &indent .bl ^&lic1
	.dv bl .sp .5 &indent .bl ^&lic1
	.dv end_list .el &uindent .sp 1
	.dv el .el &uindent .sp 1
	.dv item  .sp .3 .li
	.dv li  .sp .3 .li

	.dv auto_num .sp .5 .di ^:

	.dv ex_start .sp .5 .ll -.25i .in +.15i .sf Courier .st ^&extextsize .fo off
	.** ex_end macro calls _must_ be placed in col 0 to cause an exit from no-format mode.
	.dv ex_end      .fo on .sf ^&textfont .st ^&textsize .in -.15i .ll +.25i .sp 1
	.dv ex_end_nosp .fo on .sf ^&textfont .st ^&textsize .in -.15i .ll +.25i .sp .1
		
	.dv h1 .h1 $1	
	.dv h2 .h2 $1
	.dv h3 .h3 $1

	.dv line .ln
	.dv ln .ln
	.dv break .br
	.dv br .br

	.dv center_start .bc start
	.dv center_end .bc end

	.** required only for html
	.dv quit .qu

	.** centered and indented figures
	.dv cfig .bc start .fg $1 ^: .bc end
	.dv ifig ^&fig_indent .fg $1 ^: ^&fig_uindent

	.** get the super image macro that allows us to support images with one macro call
	.im ../setup_image.im
				
	.if pfm

		.dv table .ta $1
		.dv ta .ta $1
		.dv table_end .et
		.dv et .et
		.dv table_row .tr $1
		.dv tr .tr $1
		.dv table_cell .cl $1
		.dv tc .tc $1

		.pn on 0 center f=-%d- noline

		.** insert $2 if there is more than $1 inches remaining on the page; else insert at top of new page
		.dv ifroom .ev .gv remain .if ^^^&_iremain $1 > ^: .sp 1 .im $2 .ei .oe page .im $2 .sp 1.5 .fi

		.dv super .sm .tf superscript 2/3 $1  ^:
		.dv note .dv ss_num ^[ ^&ss_num 1 + ] ^: .sm .tf superscript 2/3 ^&ss_num  ^:
		.** .dv start_note .dv old_size ^&textsize ^: .dv textsize 8 ^: .cn start atbot Times-roman 8p $1 ^:
		.** .dv end_note .cn end ^: .dv textsize ^&old_size

		.dv start_note .cn start atbot Times-roman 8p $1
		.dv end_note .cn end

		.dv lic1 l
		.dv lic2 m

		.dv bold .tf Helvetica-bold  ^&textsize $1  ^:
		.dv ital .tf Helvetica-Oblique  ^&textsize $1  ^:
		.dv cw .tf Courier 8p  $1 ^:

		.** image has the form:  &image(postscript cmd:link:url)
		.dv http http://
	.ei
		.dv http ` `
		.if hfm
			.if ! textcolour
				.dv textcolour black
			.fi
			.if ! bgcolour
				.dv bgcolour white
			.fi
			.dv table .ta $1
			.dv ta .ta $1
			.dv table_end .et
			.dv et .et
			.dv table_row .tr $1
			.dv tr .tr $1
			.dv table_cell .cl $1
			.dv tc .cl $1

			.** corresponding .fo must be at the left mar!
			.ai
				<!-- CAUTION: this file is generated using pfm, do NOT edit as your changes will be lost -->
	.fo
			.if ! html_width
				.dv html_width 640
			.fi
			.dv outer_width [ &html_width 45 + ]
			.** limit the width to something reasonable; wide browsers screens these days make it tough to gen readable text
			.** without overloading javascript to format on the fly.
			.** 
			.cs start doc width=&{outer_width}px color=&textcolour background-color=&bgcolour margin-left=10px border-left=1px,solid,grey border-right=1px,solid,grey
			.cs start innerdoc width=&{html_width}px margin-left=20px margin-right=10px color=&textcolour background-color=&bgcolour 
			.dv quit .cs end .cs end .qu
		.ei	
			.** ------------ tfm ---------------------------------------------------------------------------------
			.dv table .sp 1
			.dv ta .sp 1
			.dv table_end .sp 1
			.dv et .sp 1
			.dv table_row ^&break
			.dv tr ^&break
			.dv table_cell &break
			.dv tc &break
		.fi

		.** these apply to both tfm or hfm as neither are page oriented
		.dv super .sm ^[ .sm ^&{ss_num}]
		.dv note .dv ss_num ^[ ^&ss_num 1 + ] ^: .sm ^[ .sm ^&{ss_num}]

		.** variable sized note
		.dv start_note .cn start atend Times-roman 8p .5i
		.dv end_note .cn end
		.dv bold $1
		.dv cw $1
		.dv ital $1
		.dv lic1 *
		.dv lic2 +

		.dv ifroom .im $2

		.** if the env var is set, redefine macros to generate the limited markdown things
		.if &markdown 0 >
			.cd 1 7i i=0 m=0
			.dv center_start ` `
			.dv center_end ` `

			.** tfm is adding a blank at the end of each line, so for a break we just pop on a second one
			.dv break `^` ^`` .br
			.dv br `^` ^`` .br

			.** justify must be off for markdown as tfm occasionally leaves an extra trailing blank which 
			.** twists the knickes of the space oriented parsers; shesh.
			.ju off

			.** no concept of a definition list in markdown; no start/end and just make the text bold to emulate
			.dv def_list  .dv an 1 ^: .sp 1
			.dv bd  .dv an 1 ^: .sp 1
			.dv end_dlist .sp 1
			.dv ed .sp 1
			.dv di ^&break ** .sm $1 .sm ^:** 
			.dv auto_num ^&break  **&{an} .sm . .sm ** .dv an ^[ &an 1 + ] ^:

			.dv beg_list  .sp 1
			.dv bl  .sp 1
			.dv item  .br ^&lic1
			.dv li  .br ^&lic1
			.dv end_list .sp 1
			.dv el .sp 1

			.dv line ***
			.dv ln ***

			.** leading indention is significant to markdown, so turn it off
			.** as it is, tfm always indents with one space that must be stripped from the final output
			.in 0
			.dv indent 
			.dv uindent .sp 2
			.dv smindent
			.dv smuindent .sp 2

			.** smashing usually helps if spaces are left before/after parens &bold( word ) 
			.** but it can leave the * or _ dangling at the end of a line
			.dv bold ** .sm $1 .sm **
			.dv ital  _ .sm $1 .sm _

			.dv cw <code>$1</code>
			.dv h1 .sp 2 # $1 .br
			.dv h2 .sp 2 ## $1 .br
			.dv h3 .sp 2 ### $1 .br

			.dv ex_start .ll -4 .in .35i .sp 2 .fo off 
			.dv ex_end .fo on .in 0i .ll +4 .sp 2
			.dv ex_end_nosp .fo on .sf ^&textfont .st ^&textsize .in 0i .ll +.25i 
		.fi
	.fi

.fi

