
Top level source directory.  Things which maybe aren't obvious are described
in this file.



This code makes use of DPDK 17.11 features which are currently in the master
branch.  Pull the DPDK repo, and attempt to checkout v17.11. 

Once the dpdk repo has been cloned, it must be built before anything in the 
vfd source tree can be built. To do this follow the following steps:

	-   cd build            # where ever you plan to clone/build it
    -   git clone http://dpdk.org/git/dpdk   # if you need to clone 
    -   cd dpdk				# where ever you installed it
    -   git checkout <correct-tag/branch>
    -   make config T=x86_64-native-linuxapp-gcc
    -   make
    -   usertools/dpdk-setup.sh
         + select the option which corresponds to the correct
           environment, most likely: x86_64-native-linuxapp-gcc
           This will go through another make process which sets
           libraries and such up and 'installs'. If there are link 
           errors during the build, it is likely this step was not 
           executed, or didn't finish correctly

    -   export RTE_SDK=$PWD			# wise to put these in your profile
    -   export RTE_TARGET=x86_64-native-linuxapp-gcc


Once DPDK has been built,  any patches in the dpdk_patch directory must be
applied.  See the README in that directory for details

Building VFd Itself: 
After DPDK is built, and patched, the following comands can be used to 
build VFd. 

	- make all

	This should:
		1) switch to the lib directory and checkout/pull jsmn from github
		2) build jsmn and the VFd library
		3) switch to the vfd directory and build VFd

	The binary should reside in vfd/buid/app/vfd

	Manual steps if using make in this directory is not desired:
		- cd vfd    # which ever directory you cloned the vfd repo into
		- cd lib
		- make jsmn			# will clone and build the jsmn library
		- make libvfd.a		# will build vfd support library
		- cd ../vfd
		- make clean 
		- make
